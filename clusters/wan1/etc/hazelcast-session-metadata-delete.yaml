# IMPORTANT:
#
#   padogrid depends on several system properties, which must be specified
#   in your hazelcast.xml. If you choose to use your own hazelcast.xml file then
#   make sure to include all system properties found in this file. The following
#   system properties are required:
#
#		"hazelcast-addon.cluster-name"
#		         Cluster name. Disabled by default.
#		         See below to see how to enable it.
#		"hazelcast-addon.management-center"
#		         MC URL.
#		"hazelcast-addon.tcp.port"
#		         TPC port number for the member.
#		"hazelcast-addon.tcp.members"
#		         A complete list of TCP member addresses.
#

hazelcast:
  cluster-name: ${hazelcast-addon.cluster-name}
  properties:
    hazelcast.phone.home.enabled: false

    # ----------- IpDiscoveryService - Begin -------------------
    # tag is optional. It is used to prefix log messages. Default: IpDiscoveryService
    hazelcast.addon.ipdiscoveryservice.tag: WanDiscovery-global
    # If service-enabled=true then a dedicated thread periodically probes
    # all the target endpoints at the startup time. Default: true
    hazelcast.addon.ipdiscoveryservice.service-enabled: true
    hazelcast.addon.ipdiscoveryservice.service-delay-in-msec: 30000
    hazelcast.addon.ipdiscoveryservice.connection-timeout-in-msec: 200
    hazelcast.addon.ipdiscoveryservice.read-timeout-in-msec: 200
    hazelcast.addon.ipdiscoveryservice.mx-use-hazelcast-object-name: false
    # ----------- IpDiscoveryService - End -------------------

    # ----------- SessionExpirationService - Begin -------------------
    hazelcast.addon.cluster.expiration.tag: SessionExpirationService
    hazelcast.addon.cluster.expiration.jmx-use-hazelcast-object-name: true
    hazelcast.addon.cluster.expiration.key.delimiter: "@"

    # INTERFACE expects key classes to implement the ISessionId interface.
    hazelcast.addon.cluster.expiration.session.smki_%TAG%: mki1_%TAG%,mki2_%TAG%
    hazelcast.addon.cluster.expiration.session.smki_%TAG%.key.type: INTERFACE

    # OBJECT expects key classes with the specified property (getter method).
    hazelcast.addon.cluster.expiration.session.smko_%TAG%: mko1_%TAG%,mko2_%TAG%
    hazelcast.addon.cluster.expiration.session.smko_%TAG%.key.type: OBJECT
    hazelcast.addon.cluster.expiration.session.smko_%TAG%.key.property: sessionId

    # CUSTOM expects an predicate class that implements the ISessionIdPredicate interface.
    hazelcast.addon.cluster.expiration.session.smkc_%TAG%: mkc1_%TAG%,mkc2_%TAG%
    hazelcast.addon.cluster.expiration.session.smkc_%TAG%.key.type: CUSTOM
    hazelcast.addon.cluster.expiration.session.smkc_%TAG%.key.predicate: org.hazelcast.addon.cluster.expiration.test.CustomPredicate

    # PARTITION_AWARE expects key classes to implement the PartitionAware interface.
    # It uses PartitionAware.getPartitionKey() as the session ID.
    hazelcast.addon.cluster.expiration.session.smkp_%TAG%: mkp1_%TAG%,mkp2_%TAG%
    hazelcast.addon.cluster.expiration.session.smkp_%TAG%.key.type: PARTITION_AWARE

    # STRING uses string values of key objects, i.e. toString(). It applies the
    # delimiter to extract the last token in the string value as the session ID.
    hazelcast.addon.cluster.expiration.session.smks_%TAG%: mks1_%TAG%,mks2_%TAG%
    hazelcast.addon.cluster.expiration.session.smks_%TAG%.key.type: STRING

    # OBJECT
    hazelcast.addon.cluster.expiration.session.mkp_session_web_session_fi_session_id_mapping_%TAG%: mkp_session_fi_session_data_%TAG%,mkp_session_application_data_%TAG%
    hazelcast.addon.cluster.expiration.session.mkp_session_web_session_fi_session_id_mapping_%TAG%.key.type: OBJECT
    hazelcast.addon.cluster.expiration.session.mkp_session_web_session_fi_session_id_mapping_%TAG%.key.property: sessionId
    # ----------- SessionExpirationService - End -------------------

  listeners:
    # IpDiscoveryInitializer is invoked during bootstrap to eagerly conducts
    # IP probing. Without the initializer, the probing is done lazily when the
    # first write operation is detected.
    - org.hazelcast.addon.spi.discovery.IpDiscoveryInitializer

    # SessionExpirationServiceInitializer is invoked during bootstrap to
    # initialize and start SessionExpirationService.
    - org.hazelcast.addon.cluster.expiration.metadata.SessionExpirationServiceInitializer_SessionMetadata_Delete

  management-center:
    scripting-enabled: true
  user-code-deployment:
    enabled: true
    class-cache-mode: ETERNAL
    provider-mode: LOCAL_AND_CACHED_CLASSES
  lite-member:
    enabled: false
  jet:
    enabled: true
  network:
    port:
      auto-increment: true
      port: ${hazelcast-addon.tcp.port}
    outbound-ports:
      - 0
    rest-api:
      enabled: true
      endpoint-groups:
        CLUSTER_READ:
          enabled: false
        CLUSTER_WRITE:
          enabled: false
        HEALTH_CHECK:
          enabled: true
        HOT_RESTART:
          enabled: false
        WAN:
          enabled: false
        DATA:
          enabled: false
    join:
      multicast:
        enabled: false
      tcp-ip:
        enabled: true
        members: ${hazelcast-addon.tcp.members}
    socket-interceptor:
      enabled: false
    ssl:
      enabled: true
      factory-class-name: com.hazelcast.nio.ssl.BasicSSLContextFactory
      properties:
        keyStore: ${keyStore}
        keyStorePassword: ${keyStorePassword}
        keyStoreType: ${keyStoreType}
        trustStore: ${trustStore}
        trustStorePassword: ${trustStorePassword}
        trustStoreType: ${trustStoreType}
        protocol: TLSv1.2
        mutualAuthentication: REQUIRED

  wan-replication:
    wan1-to-wan2:
      batch-publisher:
        location2-mkp:
          cluster-name: wan2
          batch-size: 1000
          queue-capacity: 100000
          batch-max-delay-millis: 1000
          max-concurrent-invocations: 12
          queue-full-behavior: DISCARD_AFTER_MUTATION
          acknowledge-type: ACK_ON_RECEIPT
          response-timeout-millis: 60000
          sync:
            consistency-check-strategy: MERKLE_TREES
          discovery-strategies:
            discovery-strategies:
              - class: org.hazelcast.addon.spi.discovery.IpDiscoveryStrategy
                enabled: true
                properties:
                  # tag is used as log prefix and is a part of JMX metric name
                  tag: WanDiscovery-mkp
                  target-endpoints: 192.168.2.11-50,localhost:5801,localhost:5802,localhost:5803,localhost:5804,localhost:5805,localhost:5806,localhost:5807,localhost:5808,localhost:5809,localhost:5810,localhost:5811,localhost:5810,localhost:5812,localhost:5810,localhost:5813,localhost:5814,localhost:5815
                  probe-type: ssl
                  # If service-enabled=true, then the probing is done in the dedicated thread.
                  # else if service-enabled=false then the probing is done in the Hazelcast
                  # discovery thread.  Default is false
                  service-enabled: true
                  # service-delay-in-msec applies only if service-enabled=true.
                  # If multiple strategies are listed then the first one configured
                  # overrides others.
                  service-delay-in-msec: 30000
                  # connection-timout-in-msec applies only if service-enabled=false
                  connection-timeout-in-msec: 200
                  # read-timeout-in-msec only if service-enabled=false
                  read-timeout-in-msec: 200
  map:
    # INTERFACE
    smki_*:
      eviction:
        eviction-policy: LRU
        max-size-policy: FREE_HEAP_PERCENTAGE
        size: 20
      time-to-live-seconds: 3600
      max-idle-seconds: 10
      merkle-tree:
        enabled: true
        depth: 10
      wan-replication-ref:
        wan1-to-wan2:
          merge-policy-class-name: LatestUpdateMergePolicy
      per-entry-stats-enabled: true
      entry-listeners:
        - class-name: org.hazelcast.addon.cluster.expiration.metadata.SessionExpirationListener_SessionMetadata_Delete
          include-value: true
    mki*:
      eviction:
        eviction-policy: LRU
        max-size-policy: FREE_HEAP_PERCENTAGE
        size: 20
      time-to-live-seconds: 3600
      merkle-tree:
        enabled: true
        depth: 10
      wan-replication-ref:
        wan1-to-wan2:
          merge-policy-class-name: LatestUpdateMergePolicy
      per-entry-stats-enabled: true
      indexes:
        - type: HASH
          attributes:
            - "__key.sessionId"

    # OBJECT
    smko_*:
      eviction:
        eviction-policy: LRU
        max-size-policy: FREE_HEAP_PERCENTAGE
        size: 20
      time-to-live-seconds: 3600
      max-idle-seconds: 10
      merkle-tree:
        enabled: true
        depth: 10
      wan-replication-ref:
        wan1-to-wan2:
          merge-policy-class-name: LatestUpdateMergePolicy
      per-entry-stats-enabled: true
      entry-listeners:
        - class-name: org.hazelcast.addon.cluster.expiration.metadata.SessionExpirationListener_SessionMetadata_Delete
          include-value: true
    mko*:
      eviction:
        eviction-policy: LRU
        max-size-policy: FREE_HEAP_PERCENTAGE
        size: 20
      time-to-live-seconds: 3600
      merkle-tree:
        enabled: true
        depth: 10
      wan-replication-ref:
        wan1-to-wan2:
          merge-policy-class-name: LatestUpdateMergePolicy
      per-entry-stats-enabled: true
      indexes:
        - type: HASH
          attributes:
            - "__key.sessionId"

    # CUSTOM
    smkc_*:
      eviction:
        eviction-policy: LRU
        max-size-policy: FREE_HEAP_PERCENTAGE
        size: 20
      time-to-live-seconds: 3600
      max-idle-seconds: 10
      merkle-tree:
        enabled: true
        depth: 10
      wan-replication-ref:
        wan1-to-wan2:
          merge-policy-class-name: LatestUpdateMergePolicy
      per-entry-stats-enabled: true
      entry-listeners:
        - class-name: org.hazelcast.addon.cluster.expiration.metadata.SessionExpirationListener_SessionMetadata_Delete
          include-value: true
    mkc*:
      eviction:
        eviction-policy: LRU
        max-size-policy: FREE_HEAP_PERCENTAGE
        size: 20
      time-to-live-seconds: 3600
      merkle-tree:
        enabled: true
        depth: 10
      wan-replication-ref:
        wan1-to-wan2:
          merge-policy-class-name: LatestUpdateMergePolicy
      per-entry-stats-enabled: true

    # PARTITION_AWARE
    smkp_*:
      eviction:
        eviction-policy: LRU
        max-size-policy: FREE_HEAP_PERCENTAGE
        size: 20
      time-to-live-seconds: 3600
      max-idle-seconds: 10
      merkle-tree:
        enabled: true
        depth: 10
      wan-replication-ref:
        wan1-to-wan2:
          merge-policy-class-name: LatestUpdateMergePolicy
      per-entry-stats-enabled: true
      entry-listeners:
        - class-name: org.hazelcast.addon.cluster.expiration.metadata.SessionExpirationListener_SessionMetadata_Delete
          include-value: true
      partition-strategy: com.hazelcast.partition.strategy.StringAndPartitionAwarePartitioningStrategy
    mkp*:
      eviction:
        eviction-policy: LRU
        max-size-policy: FREE_HEAP_PERCENTAGE
        size: 20
      time-to-live-seconds: 3600
      merkle-tree:
        enabled: true
        depth: 10
      wan-replication-ref:
        wan1-to-wan2:
          merge-policy-class-name: LatestUpdateMergePolicy
      per-entry-stats-enabled: true
      partition-strategy: com.hazelcast.partition.strategy.StringAndPartitionAwarePartitioningStrategy

    # STRING
    smks_*:
      eviction:
        eviction-policy: LRU
        max-size-policy: FREE_HEAP_PERCENTAGE
        size: 20
      time-to-live-seconds: 3600
      max-idle-seconds: 5
      merkle-tree:
        enabled: true
        depth: 10
      wan-replication-ref:
        wan1-to-wan2:
          merge-policy-class-name: LatestUpdateMergePolicy
      per-entry-stats-enabled: true
      entry-listeners:
        - class-name: org.hazelcast.addon.cluster.expiration.metadata.SessionExpirationListener_SessionMetadata_Delete
          include-value: true
      #partition-strategy: com.hazelcast.partition.strategy.StringPartitioningStrategy
    mks*:
      eviction:
        eviction-policy: LRU
        max-size-policy: FREE_HEAP_PERCENTAGE
        size: 20
      time-to-live-seconds: 3600
      merkle-tree:
        enabled: true
        depth: 10
      wan-replication-ref:
        wan1-to-wan2:
          merge-policy-class-name: LatestUpdateMergePolicy
      per-entry-stats-enabled: true
      #partition-strategy: com.hazelcast.partition.strategy.StringPartitioningStrategy

    # No Plugin
    smkn_*:
      eviction:
        eviction-policy: LRU
        max-size-policy: FREE_HEAP_PERCENTAGE
        size: 20
      time-to-live-seconds: 3600
      max-idle-seconds: 10
      merkle-tree:
        enabled: true
        depth: 10
      wan-replication-ref:
        wan1-to-wan2:
          merge-policy-class-name: LatestUpdateMergePolicy
      per-entry-stats-enabled: true
    mkn*:
      eviction:
        eviction-policy: LRU
        max-size-policy: FREE_HEAP_PERCENTAGE
        size: 20
      time-to-live-seconds: 3600
      max-idle-seconds: 10
      merkle-tree:
        enabled: true
        depth: 10
      wan-replication-ref:
        wan1-to-wan2:
          merge-policy-class-name: LatestUpdateMergePolicy
      per-entry-stats-enabled: true
          
  executor-service:
    hz:wan:
      pool-size: 16

  # padogrid serialization
  serialization:
    portable-version: 1
    portable-factories:
      - factory-id: 10000
        class-name: org.hazelcast.addon.hql.impl.PortableFactoryImpl
    data-serializable-factories:
      - factory-id: 1010
        class-name: org.hazelcast.addon.cluster.expiration.metadata.ExpirationDataSerializableFactory