#!/usr/bin/env bash
SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"
. $SCRIPT_DIR/.addonenv.sh

EXECUTABLE="`basename $0`"

if [ "$HELP" == "true" ]; then
cat <<EOF

NAME
   $EXECUTABLE - Build WAN the test harness environment

SYNOPSIS
   $EXECUTABLE [-?]

DESCRIPTION
   Builds the WAN test harness environment by generating SSL keystores and deploying them to
   the pertinent components. It also builds IpDiscoveryStrategy and session expiration plugins
   if not found in the 'plugins/" directory.

REFERENCES
    1. Hazelcast SPI, IpDiscoveryStrategy plugin by Sorint.lab, Private Repo, https://github.com/sorint-lab-us/hazelcast-spi.
    2. IpDiscoveryStrategy Plugin Test Harness, IpDiscoveryStrategy plugin by Sorint.lab, Private Repo, https://github.com/sorint-lab-us/bundle-hazelcast-4n5-wan_discovery.
    3. Session Expiration Management Plugin, https://github.com/padogrid/bundle-hazelcast-4n5-cluster-session.

DEFAULT
   ./$EXECUTABLE

EOF
   exit
fi

. ./setenv_keystore.sh
./create_keystores

# Deploy cluster keystores to the cluster directories
echo "Deploying cluster keystores..."
for NUM in $(seq 1 $CLUSTER_COUNT); do
   CLUSTER_ALIAS=$CLUSTER_PREFIX$NUM
   if [ "$CLUSTER" == "$CLUSTER_ALIAS" ]; then
      continue;
   fi
   CLUSTER_SSL_DIR="$CLUSTERS_DIR/$CLUSTER_ALIAS/etc/ssl"
   if [ ! -d "$CLUSTER_SSL_DIR" ]; then
      mkdir -p "$CLUSTER_SSL_DIR"
   fi
   cp $SSL_DIR/$CLUSTER_PREFIX.keystore $CLUSTER_SSL_DIR/
   cp $SSL_DIR/$CLUSTER_PREFIX-trust.keystore $CLUSTER_SSL_DIR/
done

# Deploy client keystores to the client directories
echo "Deploying client keystores..."
for NUM in $(seq 1 $CLIENT_COUNT); do
   CLIENT_ALIAS=$CLIENT_PREFIX$NUM
   CLUSTER_ALIAS=$CLUSTER_PREFIX$NUM
   CLIENT_SSL_DIR="$APPS_DIR/perf_test_$CLUSTER_ALIAS/etc/ssl"
   if [ ! -d "$CLIENT_SSL_DIR" ]; then
      mkdir -p "$CLIENT_SSL_DIR"
   fi
   cp $SSL_DIR/$CLIENT_ALIAS.keystore $CLIENT_SSL_DIR/$CLIENT_PREFIX.keystore
   cp $SSL_DIR/$CLIENT_ALIAS-trust.keystore $CLIENT_SSL_DIR/$CLIENT_PREFIX-trust.keystore
done

# Check if the IpDiscoveryStrategy plugin is included in the plugins directory
JAR_FOUND="false"
JAR_FILE=sorintlab-hazelcast-spi-*.jar
PLUGINS="$CLUSTER_DIR/plugins/*.jar"
if [ -d "$CLUSTER_DIR/plugins" ]; then
   pushd $CLUSTER_DIR/plugins > /dev/null 2>&1
   for i in *.jar; do
      if [ -f "$i" ] && [[ "$i" == "sorintlab-hazelcast-spi-"* ]]; then
         JAR_FOUND="true"
         JAR_FILE=$i
      fi
   done
   popd > /dev/null 2>&1
fi

pushd $CLUSTER_DIR > /dev/null 2>&1
if [ "$JAR_FOUND" == "true" ]; then
   # Copy the included IpDiscoveryStrategy plugin to the workspace
   echo "Copying plugins/$JAR_FILE to $PADOGRID_WORKSPACE/plugins/..."
   cp plugins/$JAR_FILE $PADOGRID_WORKSPACE/plugins/
else
   # Download and build the IpDiscoveryStrategy plugin.
   echo "Downloading and building IpDiscoveryStrategy..."
   echo git clone https://github.com/sorint-lab-us/hazelcast-spi.git
   git clone https://github.com/sorint-lab-us/hazelcast-spi.git
   pushd hazelcast-spi > /dev/null 2>&1
   git pull
   mvn clean package -DskipTests
   echo "Deploying target/$JAR_FILE to $PADOGRID_WORKSPACE/plugins/..."
   rm $PADOGRID_WORKSPACE/plugins/$JAR_FILE
   cp target/$JAR_FILE $PADOGRID_WORKSPACE/plugins/
   popd > /dev/null 2>&1
fi
popd > /dev/null 2>&1

# Check if the session expiration  plugin is included in the plugins directory
JAR_FOUND="false"
JAR_FILE=session-expiration-service-*.jar
PLUGINS="$CLUSTER_DIR/plugins/*.jar"
if [ -d "$CLUSTER_DIR/plugins" ]; then
   pushd $CLUSTER_DIR/plugins > /dev/null 2>&1
   for i in *.jar; do
      if [ -f "$i" ] && [[ "$i" == "session-expiration-service-"* ]]; then
         JAR_FOUND="true"
         JAR_FILE=$i
      fi
   done
   popd > /dev/null 2>&1
fi

pushd $CLUSTER_DIR > /dev/null 2>&1
if [ "$JAR_FOUND" == "true" ]; then
   # Copy the included session expiration plugin to the workspace
   echo "Copying plugins/session-expiration-service-*.jar to $PADOGRID_WORKSPACE/plugins/..."
   cp plugins/session-expiration-service-*.jar $PADOGRID_WORKSPACE/plugins/
else
   # Download and build the session expiration plugin
   echo "Downloading and building session-expiration-service..."
   echo git clone https://github.com/padogrid/bundle-hazelcast-4n5-cluster-session.git
   git clone https://github.com/padogrid/bundle-hazelcast-4n5-cluster-session.git
   pushd bundle-hazelcast-4n5-cluster-session/clusters/session > /dev/null 2>&1
   git pull
   mvn clean package -DskipTests
   echo "Deploying bundle-hazelcast-4n5-cluster-session/clusters/session/lib/*.jar to $PADOGRID_WORKSPACE/plugins/..."
   cp lib/*.jar $PADOGRID_WORKSPACE/plugins/
   popd > /dev/null 2>&1
fi
popd > /dev/null 2>&1

echo "Build complete."
echo ""
